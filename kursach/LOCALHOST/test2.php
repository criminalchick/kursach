<?php
// katalog
$host = "localhost"; // Устанавливаем локальный хост для базы данных
$db = "db_demo_kaza"; // Устанавливаем имя базы данных
$username = "root"; // Устанавливаем имя пользователя для доступа к базе данных
$password = ""; // Устанавливаем пароль для доступа к базе данных
$mysqli = new mysqli($host, $username, $password, $db); // Создаем новый объект mysqli для подключения к базе данных

if (isset($_SESSION['user_id'])) { // Проверяем, установлена ли переменная user_id в текущей сессии
    $user_id = $_SESSION['user_id']; // Если установлена, присваиваем значение переменной user_id
}

$query = "SELECT * FROM katalog"; // Создаем запрос для выборки всех данных из таблицы katalog
$result = $mysqli->query($query); // Выполняем запрос и сохраняем результат в переменной result

if ($_SERVER['REQUEST_METHOD'] === 'POST') {  // Проверяем, был ли отправлен HTTP-запрос методом POST
    if (isset($_POST['marka'])) { // Проверяем, установлено ли значение marka в массиве $_POST
        $marka = $mysqli->real_escape_string($_POST['marka']); // Экранируем специальные символы в строке marka и сохраняем в переменную
        $query = "SELECT * FROM katalog WHERE marka = '$marka'"; // Создаем запрос для выборки данных из таблицы katalog, где значение поля marka равно значению переменной $marka
        $result = $mysqli->query($query); // Выполняем запрос и сохраняем результат в переменной result
    }
}

if ($result->num_rows > 0) { // Проверяем, есть ли какие-либо строки в результате запроса
    while($row = $result->fetch_assoc()) { // Перебираем каждую строку результата и сохраняем ее в переменной row
        $id = $row['image_id']; // Присваиваем значение поля image_id строки результатов переменной $id
        $image_data = $row['image']; // Присваиваем значение поля image строки результатов переменной $image_data
        $name = $row['name']; // Присваиваем значение поля name строки результатов переменной $name
        $cena = $row['cena']; // Присваиваем значение поля cena строки результатов переменной $cena

        echo '<div class="tovar" id="'.$id.'">'; // Выводим HTML-код для отображения информации о товаре, используя значение переменной $id в качестве id для div-элемента
        echo '<div class="image">'; // Выводим HTML-код для отображения изображения товара
        echo '<a href="tovari/tovar.php?id='.$id.'"><img src="data:image/jpeg;base64,' . $image_data . '" /></a>'; // Выводим HTML-код для отображения изображения товара с помощью тега img
        echo '</div>'; 
        echo '<p class="name">'.$name.'</p>'; // Выводим HTML-код для отображения названия товара
        echo '<p class="cena">Цена: '.$cena.' рублей</p>'; // Выводим HTML-код для отображения цены товара
        echo '</div>';
    }

} else {
    echo "No data found."; // Выводим сообщение "No data found.", если результат запроса не содержит строк
}

$mysqli->close(); // Закрываем подключение к базе данных
?>




<?php
//podkluch
session_start(); // Начинаем или возобновляем сессию

$host = "localhost"; // Устанавливаем локальный хост для базы данных
$db = "db_demo_kaza"; // Устанавливаем имя базы данных
$username = "root"; // Устанавливаем имя пользователя для доступа к базе данных
$password = ""; // Устанавливаем пароль для доступа к базе данных

$mysqli = new mysqli($host, $username, $password, $db); // Создаем новый объект mysqli для подключения к базе данных

$image = ""; // Устанавливаем пустую строку для переменной image
$name = ""; // Устанавливаем пустую строку для переменной name
$opis = ""; // Устанавливаем пустую строку для переменной opis

if (isset($_GET['id'])) { // Проверяем, установлено ли значение параметра id в URL
    $id = $_GET['id']; // Присваиваем значение параметра id переменной $id
    $id = $mysqli->real_escape_string($id); // Экранируем специальные символы в строке id и сохраняем в переменной $id

    $query = "SELECT * FROM katalog WHERE image_id = '$id'"; // Создаем запрос для выборки данных из таблицы katalog, где значение поля image_id равно значению переменной $id
    $result = $mysqli->query($query); // Выполняем запрос и сохраняем результат в переменной result

    if ($result->num_rows > 0) { // Проверяем, есть ли какие-либо строки в результате запроса
        while ($row = $result->fetch_assoc()) { // Перебираем каждую строку результата и сохраняем ее в переменной row
            $image = $row['image']; // Присваиваем значение поля image строки результатов переменной $image
            $cena = $row['cena']; // Присваиваем значение поля cena строки результатов переменной $cena
            $name = $row['name']; // Присваиваем значение поля name строки результатов переменной $name
            $opis = $row['opis']; // Присваиваем значение поля opis строки результатов переменной $opis
            $image = base64_decode($image); // Декодируем закодированную строку $image из формата base64
        }

        // Добавляем товар в корзину при отправке формы методом POST
        if (isset($_POST['add_to_cart'])) { // Проверяем, была ли отправлена форма с помощью кнопки "Добавить в корзину"
            $product_id = $_GET['id']; // Присваиваем значение параметра id переменной $product_id
            $user_id = $_SESSION['user_id']; // Получаем user_id из сессии

            $stmt = $mysqli->prepare("INSERT INTO korzina (user_id, product_id,image_id) VALUES (?, ?, ?)"); // Подготавливаем запрос INSERT для добавления товара в корзину
            $stmt->bind_param("iis", $user_id, $product_id, $image); // Привязываем переменные к параметрам запроса

            if ($stmt->execute()) { // Выполняем подготовленный запрос
                header("Location: korzina.php"); // Перенаправляем пользователя на страницу корзины после добавления товара
                exit; // Завершаем выполнение скрипта
            } else {
                echo "Ошибка: " . $stmt->error; // Выводим сообщение об ошибке, если запрос выполнен с ошибкой
            }
        }

        // Проверяем, вошел ли пользователь в систему
        if (isset($_SESSION['user_id'])) {
            // Человек вошел в систему
        }
    }
}

$mysqli->close(); // Закрываем подключение к базе данных
?>
 
<div class="name"><?php echo $name; ?></div> <!-- Выводим название товара -->
<div class="headtovar">
    <img src="data:image/jpeg;base64,<?php echo base64_encode($image); ?>" /> <!-- Выводим изображение товара в формате base64 -->
</div>
<div class="cena">Цена: <?php echo $cena; ?> рублей</div> <!-- Выводим цену товара -->
<div class="opis">
    <?php echo $opis; ?> <!-- Выводим описание товара -->
</div>
<form method="post"> <!-- Форма для добавления товара в корзину методом POST -->
    <input class="buu" type="hidden" name="product_id" value="<?php echo $_GET['id']; ?>"> <!-- Скрытое поле для передачи значения id товара -->
    <input class="sub6" type="submit" name="add_to_cart" value="В корзину"> <!-- Кнопка для добавления товара в корзину -->
</form>





<?php
//addres
$host = "localhost"; // Устанавливаем локальный хост для базы данных
$db = "db_demo_kaza"; // Устанавливаем имя базы данных
$username = "root"; // Устанавливаем имя пользователя для доступа к базе данных
$password = ""; // Устанавливаем пароль для доступа к базе данных

$mysqli = new mysqli($host, $username, $password, $db); // Создаем новый объект mysqli для подключения к базе данных

$gorod_label = ""; // Устанавливаем пустую строку для переменной gorod_label
$pochtaindex_label = ""; // Устанавливаем пустую строку для переменной pochtaindex_label

if ($mysqli->connect_error) { // Проверяем, есть ли ошибка подключения к базе данных
    die("Ошибка подключения к базе данных: " . $mysqli->connect_error); // Если есть ошибка, выводим сообщение об ошибке и завершаем скрипт
}

if (isset($_SESSION['user_id'])) { // Проверяем, существует ли переменная сессии user_id
    $user_id = $_SESSION['user_id']; // Присваиваем значение user_id из сессии переменной $user_id

    $query = "SELECT email, phone FROM user WHERE user_id = ?"; // Формируем запрос для выборки email и phone из таблицы user по user_id
    $stmt_user = $mysqli->prepare($query); // Подготавливаем запрос
    $stmt_user->bind_param("i", $user_id); // Привязываем параметры запроса
    $stmt_user->execute(); // Выполняем запрос
    $result_user = $stmt_user->get_result(); // Получаем результат запроса

    if ($result_user->num_rows > 0) { // Проверяем, есть ли строки в результате запроса
        while ($row =  $result_user->fetch_assoc()) { // Перебираем результат и сохраняем его в переменную $row
            $email = $row['email']; // Присваиваем значение поля email переменной $email
            $phone = $row['phone']; // Присваиваем значение поля phone переменной $phone
        }

        if (isset($_POST['gorod']) && isset($_POST['pochtaindex'])) { // Проверяем, были ли отправлены значения gorod и pochtaindex методом POST
            // Получаем значения из формы и привязываем их к параметрам SQL-запроса для добавления адреса в базу данных
            // Устанавливаем значения для отображения на странице после успешной отправки формы
        } else {
            // Получаем значения из базы данных для отображения на странице
        }
    }
}

$mysqli->close(); // Закрываем подключение к базе данных
?>

<!-- Форма для ввода/отображения данных адреса и контактной информации пользователя -->
<form action="index.php" method="post" class="m-auto">
    <div class="mb-1">
        <!-- Выводим метку и значение для города с возможностью ввода, если значение не задано -->
    </div>
    <div class="mb-1">
        <!-- Выводим метку и значение для почтового индекса с возможностью ввода, если значение не задано -->
    </div>
    <div class="mb-1">
        <!-- Выводим метку и значение для почты -->
    </div>
    <div class="mb-1">
        <!-- Выводим метку и значение для телефона -->
    </div>

    <div class="vhod">
    <?php if (!$pochtaindex_label) { ?>
        <!-- Создаем скрытое поле для передачи значения адреса и кнопку для отправки формы -->
        <?php } ?>
    </div>
</form>





<?php
//zakazi

$host = "localhost"; // Устанавливаем локальный хост для базы данных
$db = "db_demo_kaza"; // Выбираем имя базы данных для подключения
$username = "root"; // Устанавливаем имя пользователя для доступа к базе данных
$password = ""; // Устанавливаем пароль для доступа к базе данных

$mysqli = new mysqli($host, $username, $password, $db); // Создаем новый объект mysqli для подключения к базе данных

if ($mysqli->connect_error) { // Проверяем, есть ли ошибка подключения к базе данных
    die("Ошибка подключения к базе данных: " . $mysqli->connect_error); // Если есть ошибка, выводим сообщение об ошибке и завершаем скрипт
}

if (isset($_SESSION['user_id'])) { // Проверяем, существует ли переменная сессии user_id
    $user_id = $_SESSION['user_id']; // Присваиваем значение user_id из сессии переменной $user_id

    if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['delete_order'])) { // Проверяем, был ли отправлен метод POST и существует ли параметр delete_order в запросе POST
        // Получаем ID заказа из POST запроса
        // Удаление заказа из таблицы "zakazi"
        // Перенаправляем на текущую страницу для избежания повторной отправки формы
    }

    $product_id = ""; // Инициализируем переменные для хранения ID заказа и его количества
    $quantity = "";

    $query = "SELECT product_id, quantity FROM zakazi WHERE user_id = ?"; // Формируем запрос для выборки product_id и quantity из таблицы zakazi по user_id
    $stmt = $mysqli->prepare($query); // Подготавливаем запрос
    $stmt->bind_param("i", $user_id); // Привязываем параметры запроса
    $stmt->execute(); // Выполняем запрос
    $result = $stmt->get_result(); // Получаем результат запроса

    if ($result->num_rows > 0) { // Проверяем, есть ли строки в результате запроса
        while ($row = $result->fetch_assoc()) { // Перебираем результат и сохраняем его в переменную $row
            $product_id = $row['product_id']; // Присваиваем значение поля product_id переменной $product_id
            $quantity = $row['quantity']; // Присваиваем значение поля quantity переменной $quantity
            echo '<form method="post" action="">'; // Открываем HTML-форму для отображения данных каждого заказа и возможности удаления
            // Выводим метки и значения для продукта и количества, а также кнопку для удаления заказа
        }
    }
}

$mysqli->close(); // Закрываем соединение с базой данных
?>